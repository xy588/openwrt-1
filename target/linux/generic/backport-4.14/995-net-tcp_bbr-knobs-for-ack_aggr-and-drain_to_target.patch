From e37c05cf988c4f18d4b10a93a4680eb24dbf92b0 Mon Sep 17 00:00:00 2001
From: Priyaranjan Jha <priyarjha@google.com>
Date: Mon, 2 Apr 2018 19:48:05 -0400
Subject: [PATCH 6/6] net-tcp_bbr: knobs for ack_aggr and drain_to_target

This patch adds knobs for ack_aggr and drain_to_target. This is for
development testing only, and not intended to be in the final version.

Signed-off-by: Priyaranjan Jha <priyarjha@google.com>
Reviewed-by: Neal Cardwell <ncardwell@google.com>
---
 net/ipv4/tcp_bbr.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

--- a/net/ipv4/tcp_bbr.c
+++ b/net/ipv4/tcp_bbr.c
@@ -190,7 +190,7 @@ static const u32 bbr_lt_bw_diff = 4000 /
 static const u32 bbr_lt_bw_max_rtts = 48;
 
 /* Gain factor for adding extra_acked to target cwnd: */
-static const int bbr_extra_acked_gain = BBR_UNIT;
+static int bbr_extra_acked_gain = BBR_UNIT;
 /* Window length of extra_acked window. Max allowed val is 31. */
 static const u32 bbr_extra_acked_win_rtts = 10;
 /* Max allowed val for ack_epoch_acked, after which sampling epoch is reset */
@@ -199,7 +199,10 @@ static const u32 bbr_ack_epoch_acked_res
 static const u32 bbr_extra_acked_max_us = 100 * 1000;
 
 /* Each cycle, try to hold sub-unity gain until inflight <= BDP. */
-static const bool bbr_drain_to_target = true;	/* default: enabled */
+static bool bbr_drain_to_target = true;	/* default: enabled */
+
+module_param_named(extra_acked_gain,  bbr_extra_acked_gain,  int,    0664);
+module_param_named(drain_to_target,   bbr_drain_to_target,   bool,   0664);
 
 /* Do we estimate that STARTUP filled the pipe? */
 static bool bbr_full_bw_reached(const struct sock *sk)
